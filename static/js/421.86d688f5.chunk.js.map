{"version":3,"file":"static/js/421.86d688f5.chunk.js","mappings":"wMA2EA,QArEA,WACI,MAAM,OAAEA,EAAM,WAAEC,EAAU,cAAEC,EAAa,YAAEC,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC/DC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAS,KAC9CC,EAAqBC,IAA0BF,EAAAA,EAAAA,UAAS,IAgC/D,OA9BAG,EAAAA,EAAAA,YAAU,KAEN,MAAMC,EAAQC,YAAW,KACrBH,EAAuBT,EAAW,GACnC,KAGH,MAAO,IAAMa,aAAaF,EAAM,GACjC,CAACX,KAEJU,EAAAA,EAAAA,YAAU,KAENJ,EAAkBP,EAAOe,QAAOC,GAC5BA,EAAMC,MAAMC,cAAcC,SAASV,EAAoBS,iBACzD,GACH,CAAClB,EAAQS,KAgBRW,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,SACIC,KAAK,OACLC,YAAY,YACZC,MAAOxB,EACPyB,SAnBgBC,IACxB,MAAM,MAAEF,GAAUE,EAAEC,OACpB1B,EAAcuB,EAAM,IAmBftB,EAAY0B,OAAS,IAClBP,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,mBAAkBT,SAC3BlB,EAAY4B,KAAIC,IACbV,EAAAA,EAAAA,KAAA,MAEIW,QAASA,KAAMC,OArBRC,EAqB8BH,EAAWf,MApBpEf,EAAciC,GACdzB,EAAuByB,QACvB5B,EAAkBP,EAAOe,QAAOC,GAC5BA,EAAMC,MAAMC,gBAAkBiB,EAAMjB,iBAJbiB,KAqBgD,EAAAd,SAEtDW,EAAWf,OAHPe,EAAWI,aAQhCd,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,aAAYT,SACtBf,EAAeyB,KAAIf,IAChBM,EAAAA,EAAAA,KAAA,OAAwBQ,UAAU,aAAYT,UAC1CD,EAAAA,EAAAA,MAACiB,EAAAA,GAAI,CAACC,GAAE,UAAAC,OAAYvB,EAAMoB,QAASf,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKkB,IAAKxB,EAAMyB,QAAUC,EAAAA,EAAgBC,IAAK3B,EAAMC,MAAO2B,QAASC,EAAAA,KACrEvB,EAAAA,EAAAA,KAAA,KAAAD,SAAIL,EAAMC,YAHRD,EAAMoB,cAUpC,C,kCCzEO,MAAMM,EAAgB,uE,gDCEtB,MAAMG,EAAoBlB,IAC7BA,EAAEC,OAAOY,IAAME,EAAAA,CAAc,C","sources":["components/MovieList.js","utils/constants.js","utils/utilFn.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MovieContext } from '../context/MovieContext';\nimport { fallbackImgUrl } from '../utils/constants';\nimport { handleImageError } from '../utils/utilFn';\n\nfunction MovieList() {\n    const { movies, searchTerm, setSearchTerm, suggestions } = useContext(MovieContext);\n    const [filteredMovies, setFilteredMovies] = useState([]);\n    const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(\"\");\n\n    useEffect(() => {\n        // Update debounced search term after 1 sec\n        const timer = setTimeout(() => {\n            setDebouncedSearchTerm(searchTerm);\n        }, 1000);\n\n        // Cleanup function to clear the timer if searchTerm changes before 1 sec\n        return () => clearTimeout(timer);\n    }, [searchTerm]);\n\n    useEffect(() => {\n        // Filter movies based on debouncedSearchTerm\n        setFilteredMovies(movies.filter(movie =>\n            movie.Title.toLowerCase().includes(debouncedSearchTerm.toLowerCase())\n        ));\n    }, [movies, debouncedSearchTerm]);\n\n    const handleSearchChange = (e) => {\n        const { value } = e.target;\n        setSearchTerm(value);\n    };\n\n    const handleSuggestionClick = (title) => {\n        setSearchTerm(title);\n        setDebouncedSearchTerm(title); // Update debouncedSearchTerm\n        setFilteredMovies(movies.filter(movie =>\n            movie.Title.toLowerCase() === title.toLowerCase()\n        ));\n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                placeholder=\"Search...\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n            />\n            {suggestions.length > 0 && (\n                <ul className=\"suggestions-list\">\n                    {suggestions.map(suggestion => (\n                        <li\n                            key={suggestion.imdbID}\n                            onClick={() => handleSuggestionClick(suggestion.Title)}\n                        >\n                            {suggestion.Title}\n                        </li>\n                    ))}\n                </ul>\n            )}\n            <div className=\"movie-grid\">\n                {filteredMovies.map(movie => (\n                    <div key={movie.imdbID} className=\"movie-card\">\n                        <Link to={`/movie/${movie.imdbID}`}>\n                            <img src={movie.Poster || fallbackImgUrl} alt={movie.Title} onError={handleImageError} />\n                            <p>{movie.Title}</p>\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MovieList;\n","export const fallbackImgUrl= \"https://parniangostar.com/_next/static/media/imgFallBack.581a9fe3.png\";\n \n","import { fallbackImgUrl } from \"./constants\";\n\nexport const handleImageError = (e) => {\n    e.target.src = fallbackImgUrl;\n};"],"names":["movies","searchTerm","setSearchTerm","suggestions","useContext","MovieContext","filteredMovies","setFilteredMovies","useState","debouncedSearchTerm","setDebouncedSearchTerm","useEffect","timer","setTimeout","clearTimeout","filter","movie","Title","toLowerCase","includes","_jsxs","children","_jsx","type","placeholder","value","onChange","e","target","length","className","map","suggestion","onClick","handleSuggestionClick","title","imdbID","Link","to","concat","src","Poster","fallbackImgUrl","alt","onError","handleImageError"],"sourceRoot":""}